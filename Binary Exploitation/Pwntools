1. Checksec
On using the 'checksec' command, the user is presented with:
  Arch: Architecture
  RELRO: Relocation Read-Only, which makes the global offset table (GOT) read-only after the linker resolves functions to it.
    https://www.redhat.com/en/blog/hardening-elf-binaries-using-relocation-read-only-relro
  Stack: Stack canaries are tokens placed after a stack to detect a stack overflow. Stack canaries sit beside the stack in memory (where the program variables are stored), and if there is a stack overflow, then the canary will be corrupted. This allows the program to detect a buffer overflow and shut down.
    https://www.sans.org/blog/stack-canaries-gingerly-sidestepping-the-cage/
  NX: Non-executable. If this is enabled, then memory segments can be either writable or executable, but not both. This stops potential attackers from injecting their own malicious code (called shellcode) into the program, because something in a writable segment cannot be executed.
    https://en.wikipedia.org/wiki/Executable_space_protection
  PIE: Position Independent Executable. This loads the program dependencies into random locations, so attacks that rely on memory layout are more difficult to conduct. 
    https://access.redhat.com/blogs/766093/posts/1975793
  RWX: RWX indicates that there are segments which can be read, written, and executed.
  
2. Cyclic
Command line for cyclic is 'cyclic [number]'. We can put the output into a file by typing 'cyclic [number] > [file name]'.
GDB is used to debug files and assess where overflows can occur. To enter into debugging mode with gdb we enter the command 'gdb [file name]'. To run a program in gdb we type 'r'. If we want to add input from a text file we use '<'.
An important part of memory that can be overwritten is the instruction pointer. It is called the eip on 32-bit machines and rip on 64-bit machines. It points to the next instruction to be executed.

